{"version":3,"sources":["api/api.js","store/store.js","components/SongCard/SongCard.js","components/SongsList/SongsList.js","components/HomePage/HomePage.js","components/SearchForm/SearchForm.js","components/SongInfo/SongInfo.js","components/SearchPage/SearchPage.js","components/ArtistPage/ArtistPage.js","App.jsx","index.js"],"names":["API_KEY","request","url","options","a","fetch","response","ok","Error","status","statusText","json","result","loadPopularSongs","popularSongs","findSong","name","artist","song","loadArtistInfo","SET_SONGS","SET_FOUND_SONG","SET_ARTIST","actions","songs","type","store","dispatch","getSongs","state","getFoundSong","foundSong","getSelectedArtist","selectedArtist","createStore","action","composeWithDevTools","applyMiddleware","thunk","SongCard","image","useDispatch","className","src","alt","href","to","onClick","SongsList","useSelector","useEffect","songsFromServer","tracks","track","map","key","HomePage","SearchForm","useState","setSong","setArtist","handleSubmit","event","preventDefault","songFromServer","onSubmit","placeholder","value","onChange","target","SongInfo","message","album","title","SearchPage","ArtistPage","tags","tag","bio","summary","App","activeClassName","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ab232ab.chunk.js","sourcesContent":["/* eslint-disable max-len */\nconst BASE_URL = 'http://ws.audioscrobbler.com';\nconst API_KEY = '6b3d2042aa7eea41dc6a80457b25d65e';\n\nconst request = async(url, options) => {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const loadPopularSongs = async() => {\n  const popularSongs = await request(`/2.0/?method=chart.gettoptracks&api_key=${API_KEY}&format=json`);\n\n  return popularSongs;\n};\n\nexport const findSong = async(name, artist) => {\n  const song = await request(`/2.0/?method=track.getInfo&api_key=${API_KEY}&artist=${artist}&track=${name}&autocorrect[1]&format=json`);\n\n  return song;\n};\n\nexport const loadArtistInfo = async(name) => {\n  const artist = await request(`/2.0/?method=artist.getinfo&artist=${name}&api_key=${API_KEY}&format=json`);\n\n  return artist;\n};\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { loadArtistInfo } from '../api/api';\n\nconst SET_SONGS = 'SET_SONGS';\nconst SET_FOUND_SONG = 'SET_FOUND_SONG';\nconst SET_ARTIST = 'SET_ARTIST';\n\nexport const actions = {\n  setSongs: songs => ({\n    type: SET_SONGS,\n    songs,\n  }),\n  setFoundSong: song => ({\n    type: SET_FOUND_SONG,\n    song,\n  }),\n  setArtist: name => async() => {\n    const artist = await loadArtistInfo(name);\n\n    store.dispatch({\n      type: SET_ARTIST,\n      artist: artist.artist,\n    });\n  },\n};\n\nconst initialState = {\n  songs: [],\n  foundSong: null,\n  selectedArtist: null,\n};\n\nexport const getSongs = state => state.songs;\nexport const getFoundSong = state => state.foundSong;\nexport const getSelectedArtist = state => state.selectedArtist;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_SONGS: {\n      return {\n        ...state,\n        songs: action.songs,\n      };\n    }\n\n    case SET_FOUND_SONG: {\n      return {\n        ...state,\n        foundSong: action.song,\n      };\n    }\n\n    case SET_ARTIST: {\n      return {\n        ...state,\n        selectedArtist: action.artist,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nconst store = createStore(reducer, initialState, composeWithDevTools(\n  applyMiddleware(thunk),\n));\n\nexport default store;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { actions } from '../../store/store';\nimport './SongCard.scss';\n\nexport const SongCard = ({ image, name, artist, url }) => {\n  const dispatch = useDispatch();\n\n  const handleArtistClick = () => {\n    dispatch(actions.setArtist(artist.name));\n  };\n\n  return (\n    <div className=\"card song-card\">\n      <div className=\"card-image\">\n        <figure className=\"image\">\n          <img src={image[3]['#text']} alt=\"\" />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <a href={url}>\n          {name}\n        </a>\n        <Link to=\"/artist\" onClick={handleArtistClick}>\n          {artist.name}\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadPopularSongs } from '../../api/api';\nimport { actions, getSongs } from '../../store/store';\nimport { SongCard } from '../SongCard/SongCard';\nimport './SongsList.scss';\n\nexport const SongsList = () => {\n  const dispatch = useDispatch();\n  const songs = useSelector(getSongs);\n\n  useEffect(async() => {\n    const songsFromServer = await loadPopularSongs();\n\n    dispatch(actions.setSongs(songsFromServer.tracks.track));\n  }, []);\n\n  return (\n    <div className=\"songs\">\n      {songs.map(song => (\n        <SongCard {...song} key={song.name} />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { SongsList } from '../SongsList/SongsList';\nimport './HomePage.scss';\n\nexport const HomePage = () => (\n  <section className=\"popular\">\n    <h1 className=\"popular__title\">Popular songs</h1>\n    <SongsList />\n  </section>\n);\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { findSong } from '../../api/api';\nimport { actions } from '../../store/store';\nimport './SearchForm.scss';\n\nexport const SearchForm = () => {\n  const dispatch = useDispatch();\n  const [song, setSong] = useState('');\n  const [artist, setArtist] = useState('');\n\n  const handleSubmit = async(event) => {\n    event.preventDefault();\n\n    const songFromServer = await findSong(song, artist);\n\n    dispatch(actions.setFoundSong(songFromServer));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"field is-horizontal\">\n        <div className=\"field\">\n          <p className=\"control has-icons-left\">\n            <input\n              className=\"input\"\n              placeholder=\"Some song\"\n              type=\"text\"\n              name=\"song\"\n              value={song}\n              onChange={(event) => {\n                setSong(event.target.value);\n              }}\n            />\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-search\" />\n            </span>\n          </p>\n        </div>\n        <div className=\"field\">\n          <p className=\"control has-icons-left\">\n            <input\n              className=\"input\"\n              placeholder=\"Some artist\"\n              type=\"text\"\n              name=\"artist\"\n              value={artist}\n              onChange={(event) => {\n                setArtist(event.target.value);\n              }}\n            />\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-search\" />\n            </span>\n          </p>\n        </div>\n        <button type=\"submit\" className=\"button\">\n          Find song\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getFoundSong } from '../../store/store';\nimport './SongInfo.scss';\n\nexport const SongInfo = () => {\n  const song = useSelector(getFoundSong);\n\n  if (!song) {\n    return (\n      <h2>Find song first</h2>\n    );\n  }\n\n  if (song.message) {\n    return (\n      <h2>\n        {song.message}\n      </h2>\n    );\n  }\n\n  const { name, artist, album } = song.track;\n\n  return (\n    <div className=\"m-3\">\n      <div className=\"card song-info\">\n        <h1>\n          {`Song: ${name}`}\n        </h1>\n        <p>\n          {`Artist: ${artist.name}`}\n        </p>\n        {album\n          ? (\n            <p>\n              {`Album: ${album.title}`}\n            </p>\n          )\n          : (\n            <p>\n              No album info\n            </p>\n          )\n        }\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { SearchForm } from '../SearchForm/SearchForm';\nimport { SongInfo } from '../SongInfo/SongInfo';\nimport './SearchPage.scss';\n\nexport const SearchPage = () => (\n  <section className=\"search m-3\">\n    <SearchForm />\n    <SongInfo />\n  </section>\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getSelectedArtist } from '../../store/store';\nimport './ArtistPage.scss';\n\nexport const ArtistPage = () => {\n  const artist = useSelector(getSelectedArtist);\n\n  return (\n    <div className=\"m-3\">\n      {artist\n        ? (\n          <div className=\"card artist-card\">\n            <img src={artist.image[0]['#text']} alt=\"\" />\n            <div className=\"card-content\">\n              <a href={artist.url}>\n                {artist.name}\n              </a>\n              <p>Tags :</p>\n              <ul>\n                {artist.tags.tag.map(tag => (\n                  <li key={tag.name}>\n                    <a href={tag.url}>\n                      {tag.name}\n                    </a>\n                  </li>\n                ))\n                }\n              </ul>\n            </div>\n            <p>\n              {artist.bio.summary}\n            </p>\n          </div>\n        )\n        : (\n          <h1>No artist selected</h1>\n        )\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport { Switch, Route, NavLink } from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { SearchPage } from './components/SearchPage/SearchPage';\nimport { ArtistPage } from './components/ArtistPage/ArtistPage';\n\nexport const App = () => (\n  <>\n    <header>\n      <nav className=\"tabs is-info\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className=\"navbar-item is-tab\"\n            activeClassName=\"is-active\"\n            exact\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/search\"\n            className=\"navbar-item is-tab\"\n            activeClassName=\"is-active\"\n          >\n            Search song\n          </NavLink>\n          <NavLink\n            to=\"/artist\"\n            className=\"navbar-item is-tab\"\n            activeClassName=\"is-active\"\n          >\n            Artist\n          </NavLink>\n        </div>\n      </nav>\n    </header>\n\n    <main className=\"container\">\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact />\n        <Route path=\"/search\" component={SearchPage} />\n        <Route path=\"/artist\" component={ArtistPage} />\n      </Switch>\n    </main>\n  </>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}